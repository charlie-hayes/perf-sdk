// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sdk_performer.proto

package com.couchbase.grpc.sdk.protocol;

/**
 * <pre>
 * "HorizontalScaling" is an abstraction over there been many forms of concurrency.  The core idea is that the driver
 * is trying to increase the parallelism, and it's up to the performer to choose a suitable platform-dependent way to
 * do this.
 * For some languages that will be threads.  For some, a larger pool of concurrent Future/Promises.  For some,
 * forking a new process.
 * Whatever is produced (thread, new process), it should run the provided transaction in a tight loop.  So essentially
 * PerfRunHorizontalScaling is the number of concurrent transactions.
 * </pre>
 *
 * Protobuf type {@code protocol.PerfRunHorizontalScaling}
 */
public final class PerfRunHorizontalScaling extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:protocol.PerfRunHorizontalScaling)
    PerfRunHorizontalScalingOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PerfRunHorizontalScaling.newBuilder() to construct.
  private PerfRunHorizontalScaling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PerfRunHorizontalScaling() {
    sdkCommand_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PerfRunHorizontalScaling();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PerfRunHorizontalScaling(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              sdkCommand_ = new java.util.ArrayList<com.couchbase.grpc.sdk.protocol.SdkCreateRequest>();
              mutable_bitField0_ |= 0x00000001;
            }
            sdkCommand_.add(
                input.readMessage(com.couchbase.grpc.sdk.protocol.SdkCreateRequest.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        sdkCommand_ = java.util.Collections.unmodifiableList(sdkCommand_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.couchbase.grpc.sdk.protocol.SdkPerformer.internal_static_protocol_PerfRunHorizontalScaling_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.couchbase.grpc.sdk.protocol.SdkPerformer.internal_static_protocol_PerfRunHorizontalScaling_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.class, com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.Builder.class);
  }

  public static final int SDKCOMMAND_FIELD_NUMBER = 1;
  private java.util.List<com.couchbase.grpc.sdk.protocol.SdkCreateRequest> sdkCommand_;
  /**
   * <pre>
   * Performer will run these transactions, in a loop.
   * </pre>
   *
   * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
   */
  @java.lang.Override
  public java.util.List<com.couchbase.grpc.sdk.protocol.SdkCreateRequest> getSdkCommandList() {
    return sdkCommand_;
  }
  /**
   * <pre>
   * Performer will run these transactions, in a loop.
   * </pre>
   *
   * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder> 
      getSdkCommandOrBuilderList() {
    return sdkCommand_;
  }
  /**
   * <pre>
   * Performer will run these transactions, in a loop.
   * </pre>
   *
   * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
   */
  @java.lang.Override
  public int getSdkCommandCount() {
    return sdkCommand_.size();
  }
  /**
   * <pre>
   * Performer will run these transactions, in a loop.
   * </pre>
   *
   * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
   */
  @java.lang.Override
  public com.couchbase.grpc.sdk.protocol.SdkCreateRequest getSdkCommand(int index) {
    return sdkCommand_.get(index);
  }
  /**
   * <pre>
   * Performer will run these transactions, in a loop.
   * </pre>
   *
   * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
   */
  @java.lang.Override
  public com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder getSdkCommandOrBuilder(
      int index) {
    return sdkCommand_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < sdkCommand_.size(); i++) {
      output.writeMessage(1, sdkCommand_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < sdkCommand_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, sdkCommand_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling)) {
      return super.equals(obj);
    }
    com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling other = (com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling) obj;

    if (!getSdkCommandList()
        .equals(other.getSdkCommandList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getSdkCommandCount() > 0) {
      hash = (37 * hash) + SDKCOMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getSdkCommandList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * "HorizontalScaling" is an abstraction over there been many forms of concurrency.  The core idea is that the driver
   * is trying to increase the parallelism, and it's up to the performer to choose a suitable platform-dependent way to
   * do this.
   * For some languages that will be threads.  For some, a larger pool of concurrent Future/Promises.  For some,
   * forking a new process.
   * Whatever is produced (thread, new process), it should run the provided transaction in a tight loop.  So essentially
   * PerfRunHorizontalScaling is the number of concurrent transactions.
   * </pre>
   *
   * Protobuf type {@code protocol.PerfRunHorizontalScaling}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:protocol.PerfRunHorizontalScaling)
      com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScalingOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.couchbase.grpc.sdk.protocol.SdkPerformer.internal_static_protocol_PerfRunHorizontalScaling_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.couchbase.grpc.sdk.protocol.SdkPerformer.internal_static_protocol_PerfRunHorizontalScaling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.class, com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.Builder.class);
    }

    // Construct using com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSdkCommandFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (sdkCommandBuilder_ == null) {
        sdkCommand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        sdkCommandBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.couchbase.grpc.sdk.protocol.SdkPerformer.internal_static_protocol_PerfRunHorizontalScaling_descriptor;
    }

    @java.lang.Override
    public com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling getDefaultInstanceForType() {
      return com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.getDefaultInstance();
    }

    @java.lang.Override
    public com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling build() {
      com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling buildPartial() {
      com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling result = new com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling(this);
      int from_bitField0_ = bitField0_;
      if (sdkCommandBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          sdkCommand_ = java.util.Collections.unmodifiableList(sdkCommand_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.sdkCommand_ = sdkCommand_;
      } else {
        result.sdkCommand_ = sdkCommandBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling) {
        return mergeFrom((com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling other) {
      if (other == com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling.getDefaultInstance()) return this;
      if (sdkCommandBuilder_ == null) {
        if (!other.sdkCommand_.isEmpty()) {
          if (sdkCommand_.isEmpty()) {
            sdkCommand_ = other.sdkCommand_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSdkCommandIsMutable();
            sdkCommand_.addAll(other.sdkCommand_);
          }
          onChanged();
        }
      } else {
        if (!other.sdkCommand_.isEmpty()) {
          if (sdkCommandBuilder_.isEmpty()) {
            sdkCommandBuilder_.dispose();
            sdkCommandBuilder_ = null;
            sdkCommand_ = other.sdkCommand_;
            bitField0_ = (bitField0_ & ~0x00000001);
            sdkCommandBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSdkCommandFieldBuilder() : null;
          } else {
            sdkCommandBuilder_.addAllMessages(other.sdkCommand_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.couchbase.grpc.sdk.protocol.SdkCreateRequest> sdkCommand_ =
      java.util.Collections.emptyList();
    private void ensureSdkCommandIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        sdkCommand_ = new java.util.ArrayList<com.couchbase.grpc.sdk.protocol.SdkCreateRequest>(sdkCommand_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.couchbase.grpc.sdk.protocol.SdkCreateRequest, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder, com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder> sdkCommandBuilder_;

    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public java.util.List<com.couchbase.grpc.sdk.protocol.SdkCreateRequest> getSdkCommandList() {
      if (sdkCommandBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sdkCommand_);
      } else {
        return sdkCommandBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public int getSdkCommandCount() {
      if (sdkCommandBuilder_ == null) {
        return sdkCommand_.size();
      } else {
        return sdkCommandBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public com.couchbase.grpc.sdk.protocol.SdkCreateRequest getSdkCommand(int index) {
      if (sdkCommandBuilder_ == null) {
        return sdkCommand_.get(index);
      } else {
        return sdkCommandBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder setSdkCommand(
        int index, com.couchbase.grpc.sdk.protocol.SdkCreateRequest value) {
      if (sdkCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSdkCommandIsMutable();
        sdkCommand_.set(index, value);
        onChanged();
      } else {
        sdkCommandBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder setSdkCommand(
        int index, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder builderForValue) {
      if (sdkCommandBuilder_ == null) {
        ensureSdkCommandIsMutable();
        sdkCommand_.set(index, builderForValue.build());
        onChanged();
      } else {
        sdkCommandBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder addSdkCommand(com.couchbase.grpc.sdk.protocol.SdkCreateRequest value) {
      if (sdkCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSdkCommandIsMutable();
        sdkCommand_.add(value);
        onChanged();
      } else {
        sdkCommandBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder addSdkCommand(
        int index, com.couchbase.grpc.sdk.protocol.SdkCreateRequest value) {
      if (sdkCommandBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSdkCommandIsMutable();
        sdkCommand_.add(index, value);
        onChanged();
      } else {
        sdkCommandBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder addSdkCommand(
        com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder builderForValue) {
      if (sdkCommandBuilder_ == null) {
        ensureSdkCommandIsMutable();
        sdkCommand_.add(builderForValue.build());
        onChanged();
      } else {
        sdkCommandBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder addSdkCommand(
        int index, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder builderForValue) {
      if (sdkCommandBuilder_ == null) {
        ensureSdkCommandIsMutable();
        sdkCommand_.add(index, builderForValue.build());
        onChanged();
      } else {
        sdkCommandBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder addAllSdkCommand(
        java.lang.Iterable<? extends com.couchbase.grpc.sdk.protocol.SdkCreateRequest> values) {
      if (sdkCommandBuilder_ == null) {
        ensureSdkCommandIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sdkCommand_);
        onChanged();
      } else {
        sdkCommandBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder clearSdkCommand() {
      if (sdkCommandBuilder_ == null) {
        sdkCommand_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        sdkCommandBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public Builder removeSdkCommand(int index) {
      if (sdkCommandBuilder_ == null) {
        ensureSdkCommandIsMutable();
        sdkCommand_.remove(index);
        onChanged();
      } else {
        sdkCommandBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder getSdkCommandBuilder(
        int index) {
      return getSdkCommandFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder getSdkCommandOrBuilder(
        int index) {
      if (sdkCommandBuilder_ == null) {
        return sdkCommand_.get(index);  } else {
        return sdkCommandBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public java.util.List<? extends com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder> 
         getSdkCommandOrBuilderList() {
      if (sdkCommandBuilder_ != null) {
        return sdkCommandBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sdkCommand_);
      }
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder addSdkCommandBuilder() {
      return getSdkCommandFieldBuilder().addBuilder(
          com.couchbase.grpc.sdk.protocol.SdkCreateRequest.getDefaultInstance());
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder addSdkCommandBuilder(
        int index) {
      return getSdkCommandFieldBuilder().addBuilder(
          index, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.getDefaultInstance());
    }
    /**
     * <pre>
     * Performer will run these transactions, in a loop.
     * </pre>
     *
     * <code>repeated .protocol.SdkCreateRequest sdkCommand = 1;</code>
     */
    public java.util.List<com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder> 
         getSdkCommandBuilderList() {
      return getSdkCommandFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.couchbase.grpc.sdk.protocol.SdkCreateRequest, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder, com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder> 
        getSdkCommandFieldBuilder() {
      if (sdkCommandBuilder_ == null) {
        sdkCommandBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.couchbase.grpc.sdk.protocol.SdkCreateRequest, com.couchbase.grpc.sdk.protocol.SdkCreateRequest.Builder, com.couchbase.grpc.sdk.protocol.SdkCreateRequestOrBuilder>(
                sdkCommand_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        sdkCommand_ = null;
      }
      return sdkCommandBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:protocol.PerfRunHorizontalScaling)
  }

  // @@protoc_insertion_point(class_scope:protocol.PerfRunHorizontalScaling)
  private static final com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling();
  }

  public static com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PerfRunHorizontalScaling>
      PARSER = new com.google.protobuf.AbstractParser<PerfRunHorizontalScaling>() {
    @java.lang.Override
    public PerfRunHorizontalScaling parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PerfRunHorizontalScaling(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PerfRunHorizontalScaling> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PerfRunHorizontalScaling> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.couchbase.grpc.sdk.protocol.PerfRunHorizontalScaling getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

